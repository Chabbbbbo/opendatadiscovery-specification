/*
 * OpenDataDiscovery API Contract
 * OpenDataDiscovery API Contract
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.DataSetFieldStat;

/**
 * DataSetFieldType
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-12-25T17:26:01.976053+03:00[Europe/Moscow]")
public class DataSetFieldType {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_LOGICAL_TYPE = "logicalType";
  @SerializedName(SERIALIZED_NAME_LOGICAL_TYPE)
  private String logicalType;

  public static final String SERIALIZED_NAME_IS_NULLABLE = "isNullable";
  @SerializedName(SERIALIZED_NAME_IS_NULLABLE)
  private Boolean isNullable;

  public static final String SERIALIZED_NAME_IS_LIST = "isList";
  @SerializedName(SERIALIZED_NAME_IS_LIST)
  private Boolean isList;

  public static final String SERIALIZED_NAME_IS_MAP = "isMap";
  @SerializedName(SERIALIZED_NAME_IS_MAP)
  private Boolean isMap;

  public static final String SERIALIZED_NAME_KEY_TYPE = "keyType";
  @SerializedName(SERIALIZED_NAME_KEY_TYPE)
  private DataSetFieldType keyType;

  public static final String SERIALIZED_NAME_VALUE_TYPE = "valueType";
  @SerializedName(SERIALIZED_NAME_VALUE_TYPE)
  private DataSetFieldType valueType;

  public static final String SERIALIZED_NAME_STATS = "stats";
  @SerializedName(SERIALIZED_NAME_STATS)
  private DataSetFieldStat stats;

  public static final String SERIALIZED_NAME_FIELD_LIST = "fieldList";
  @SerializedName(SERIALIZED_NAME_FIELD_LIST)
  private List<DataSetFieldType> fieldList = null;


  public DataSetFieldType name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public DataSetFieldType type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(required = true, value = "")

  public String getType() {
    return type;
  }


  public void setType(String type) {
    this.type = type;
  }


  public DataSetFieldType logicalType(String logicalType) {
    
    this.logicalType = logicalType;
    return this;
  }

   /**
   * Get logicalType
   * @return logicalType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLogicalType() {
    return logicalType;
  }


  public void setLogicalType(String logicalType) {
    this.logicalType = logicalType;
  }


  public DataSetFieldType isNullable(Boolean isNullable) {
    
    this.isNullable = isNullable;
    return this;
  }

   /**
   * Get isNullable
   * @return isNullable
  **/
  @ApiModelProperty(required = true, value = "")

  public Boolean getIsNullable() {
    return isNullable;
  }


  public void setIsNullable(Boolean isNullable) {
    this.isNullable = isNullable;
  }


  public DataSetFieldType isList(Boolean isList) {
    
    this.isList = isList;
    return this;
  }

   /**
   * Get isList
   * @return isList
  **/
  @ApiModelProperty(required = true, value = "")

  public Boolean getIsList() {
    return isList;
  }


  public void setIsList(Boolean isList) {
    this.isList = isList;
  }


  public DataSetFieldType isMap(Boolean isMap) {
    
    this.isMap = isMap;
    return this;
  }

   /**
   * Get isMap
   * @return isMap
  **/
  @ApiModelProperty(required = true, value = "")

  public Boolean getIsMap() {
    return isMap;
  }


  public void setIsMap(Boolean isMap) {
    this.isMap = isMap;
  }


  public DataSetFieldType keyType(DataSetFieldType keyType) {
    
    this.keyType = keyType;
    return this;
  }

   /**
   * Get keyType
   * @return keyType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DataSetFieldType getKeyType() {
    return keyType;
  }


  public void setKeyType(DataSetFieldType keyType) {
    this.keyType = keyType;
  }


  public DataSetFieldType valueType(DataSetFieldType valueType) {
    
    this.valueType = valueType;
    return this;
  }

   /**
   * Get valueType
   * @return valueType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DataSetFieldType getValueType() {
    return valueType;
  }


  public void setValueType(DataSetFieldType valueType) {
    this.valueType = valueType;
  }


  public DataSetFieldType stats(DataSetFieldStat stats) {
    
    this.stats = stats;
    return this;
  }

   /**
   * Get stats
   * @return stats
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DataSetFieldStat getStats() {
    return stats;
  }


  public void setStats(DataSetFieldStat stats) {
    this.stats = stats;
  }


  public DataSetFieldType fieldList(List<DataSetFieldType> fieldList) {
    
    this.fieldList = fieldList;
    return this;
  }

  public DataSetFieldType addFieldListItem(DataSetFieldType fieldListItem) {
    if (this.fieldList == null) {
      this.fieldList = new ArrayList<DataSetFieldType>();
    }
    this.fieldList.add(fieldListItem);
    return this;
  }

   /**
   * Get fieldList
   * @return fieldList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<DataSetFieldType> getFieldList() {
    return fieldList;
  }


  public void setFieldList(List<DataSetFieldType> fieldList) {
    this.fieldList = fieldList;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DataSetFieldType dataSetFieldType = (DataSetFieldType) o;
    return Objects.equals(this.name, dataSetFieldType.name) &&
        Objects.equals(this.type, dataSetFieldType.type) &&
        Objects.equals(this.logicalType, dataSetFieldType.logicalType) &&
        Objects.equals(this.isNullable, dataSetFieldType.isNullable) &&
        Objects.equals(this.isList, dataSetFieldType.isList) &&
        Objects.equals(this.isMap, dataSetFieldType.isMap) &&
        Objects.equals(this.keyType, dataSetFieldType.keyType) &&
        Objects.equals(this.valueType, dataSetFieldType.valueType) &&
        Objects.equals(this.stats, dataSetFieldType.stats) &&
        Objects.equals(this.fieldList, dataSetFieldType.fieldList);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, type, logicalType, isNullable, isList, isMap, keyType, valueType, stats, fieldList);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DataSetFieldType {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    logicalType: ").append(toIndentedString(logicalType)).append("\n");
    sb.append("    isNullable: ").append(toIndentedString(isNullable)).append("\n");
    sb.append("    isList: ").append(toIndentedString(isList)).append("\n");
    sb.append("    isMap: ").append(toIndentedString(isMap)).append("\n");
    sb.append("    keyType: ").append(toIndentedString(keyType)).append("\n");
    sb.append("    valueType: ").append(toIndentedString(valueType)).append("\n");
    sb.append("    stats: ").append(toIndentedString(stats)).append("\n");
    sb.append("    fieldList: ").append(toIndentedString(fieldList)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

