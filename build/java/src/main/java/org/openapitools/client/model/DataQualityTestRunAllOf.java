/*
 * OpenDataDiscovery API Contract
 * OpenDataDiscovery API Contract
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * DataQualityTestRunAllOf
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-12-30T13:37:39.645993+03:00[Europe/Moscow]")
public class DataQualityTestRunAllOf {
  public static final String SERIALIZED_NAME_DATA_QUALITY_TEST_ODDRN = "dataQualityTestOddrn";
  @SerializedName(SERIALIZED_NAME_DATA_QUALITY_TEST_ODDRN)
  private String dataQualityTestOddrn;

  public static final String SERIALIZED_NAME_START_TIME = "startTime";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private OffsetDateTime startTime;

  public static final String SERIALIZED_NAME_END_TIME = "endTime";
  @SerializedName(SERIALIZED_NAME_END_TIME)
  private OffsetDateTime endTime;

  public static final String SERIALIZED_NAME_STATUS_REASON = "statusReason";
  @SerializedName(SERIALIZED_NAME_STATUS_REASON)
  private String statusReason;

  /**
   * Gets or Sets status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    SUCCESS("SUCCESS"),
    
    FAIL("FAIL"),
    
    ABORTED("ABORTED"),
    
    OTHER("OTHER");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StatusEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private StatusEnum status;


  public DataQualityTestRunAllOf dataQualityTestOddrn(String dataQualityTestOddrn) {
    
    this.dataQualityTestOddrn = dataQualityTestOddrn;
    return this;
  }

   /**
   * Get dataQualityTestOddrn
   * @return dataQualityTestOddrn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDataQualityTestOddrn() {
    return dataQualityTestOddrn;
  }


  public void setDataQualityTestOddrn(String dataQualityTestOddrn) {
    this.dataQualityTestOddrn = dataQualityTestOddrn;
  }


  public DataQualityTestRunAllOf startTime(OffsetDateTime startTime) {
    
    this.startTime = startTime;
    return this;
  }

   /**
   * Get startTime
   * @return startTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getStartTime() {
    return startTime;
  }


  public void setStartTime(OffsetDateTime startTime) {
    this.startTime = startTime;
  }


  public DataQualityTestRunAllOf endTime(OffsetDateTime endTime) {
    
    this.endTime = endTime;
    return this;
  }

   /**
   * Get endTime
   * @return endTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getEndTime() {
    return endTime;
  }


  public void setEndTime(OffsetDateTime endTime) {
    this.endTime = endTime;
  }


  public DataQualityTestRunAllOf statusReason(String statusReason) {
    
    this.statusReason = statusReason;
    return this;
  }

   /**
   * Get statusReason
   * @return statusReason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getStatusReason() {
    return statusReason;
  }


  public void setStatusReason(String statusReason) {
    this.statusReason = statusReason;
  }


  public DataQualityTestRunAllOf status(StatusEnum status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public StatusEnum getStatus() {
    return status;
  }


  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DataQualityTestRunAllOf dataQualityTestRunAllOf = (DataQualityTestRunAllOf) o;
    return Objects.equals(this.dataQualityTestOddrn, dataQualityTestRunAllOf.dataQualityTestOddrn) &&
        Objects.equals(this.startTime, dataQualityTestRunAllOf.startTime) &&
        Objects.equals(this.endTime, dataQualityTestRunAllOf.endTime) &&
        Objects.equals(this.statusReason, dataQualityTestRunAllOf.statusReason) &&
        Objects.equals(this.status, dataQualityTestRunAllOf.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dataQualityTestOddrn, startTime, endTime, statusReason, status);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DataQualityTestRunAllOf {\n");
    sb.append("    dataQualityTestOddrn: ").append(toIndentedString(dataQualityTestOddrn)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    statusReason: ").append(toIndentedString(statusReason)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

